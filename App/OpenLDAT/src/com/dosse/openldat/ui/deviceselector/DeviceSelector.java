/*
 * Copyright (C) 2021 Federico Dossena
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package com.dosse.openldat.ui.deviceselector;

import com.dosse.openldat.device.DeviceFinder;
import com.fazecast.jSerialComm.SerialPort;
import javax.swing.DefaultListModel;
import com.dosse.openldat.Utils;
import java.awt.Component;
import java.awt.Container;
import java.awt.FocusTraversalPolicy;

/**
 *
 * @author dosse
 */
public abstract class DeviceSelector extends javax.swing.JFrame {

    private SerialPort[] ports;

    /**
     * Creates new form DeviceSelector
     */
    public DeviceSelector() {
        initComponents();
        ports = DeviceFinder.findDevices();
        if (ports.length > 1) {
            DefaultListModel dlm = new DefaultListModel();
            for (SerialPort p : ports) {
                dlm.addElement(p.getPortDescription() + " (" + p.getSystemPortName() + ")");
            }
            jList1.setModel(dlm);
            jList1.setSelectedIndex(0);
            setFocusTraversalPolicy(new FocusTraversalPolicy() {
                @Override
                public Component getComponentAfter(Container cntnr, Component cmpnt) {
                    if (cmpnt == jList1) {
                        return jButton2;
                    }
                    if (cmpnt == jButton2) {
                        return jButton1;
                    }
                    if (cmpnt == jButton1) {
                        return jList1;
                    }
                    return null;
                }

                @Override
                public Component getComponentBefore(Container cntnr, Component cmpnt) {
                    if (cmpnt == jList1) {
                        return jButton1;
                    }
                    if (cmpnt == jButton2) {
                        return jList1;
                    }
                    if (cmpnt == jButton1) {
                        return jButton2;
                    }
                    return null;
                }

                @Override
                public Component getFirstComponent(Container cntnr) {
                    return jList1;
                }

                @Override
                public Component getLastComponent(Container cntnr) {
                    return jButton1;
                }

                @Override
                public Component getDefaultComponent(Container cntnr) {
                    return jButton1;
                }
            });
            jButton1.requestFocus();
            float DPI_SCALE = Utils.getDPIScaling();
            setSize((int) (getPreferredSize().width * DPI_SCALE), (int) (getPreferredSize().height * DPI_SCALE));
            setLocationRelativeTo(null);
            setIconImage(Utils.loadAndScaleIcon("/com/dosse/openldat/ui/icon.png", (int) (128 * DPI_SCALE), (int) (128 * DPI_SCALE)).getImage());
            setVisible(true);
            Utils.focusWindow(this);
        } else {
            if (ports.length == 0) {
                onDeviceSelected(null);
            } else {
                onDeviceSelected(ports[0]);
            }
            dispose();
        }
    }

    public abstract void onDeviceSelected(SerialPort p);

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("OpenLDAT");

        jLabel1.setText("Choose a device:");

        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jList1);

        jButton1.setText("Connect");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Refresh");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int sel = jList1.getSelectedIndex();
        dispose();
        if (sel >= 0) {
            onDeviceSelected(ports[sel]);
        } else {
            onDeviceSelected(null);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        jButton1.setEnabled(false);
        jButton2.setEnabled(false);
        jList1.setEnabled(false);
        new Thread() {
            @Override
            public void run() {
                Utils.sleep(100);
                ports = DeviceFinder.findDevices();
                DefaultListModel dlm = new DefaultListModel();
                for (SerialPort p : ports) {
                    dlm.addElement(p.getPortDescription() + " (" + p.getSystemPortName() + ")");
                }
                jList1.setModel(dlm);
                if (ports.length != 0) {
                    jList1.setSelectedIndex(0);
                }
                jButton1.setEnabled(true);
                jButton2.setEnabled(true);
                jList1.setEnabled(true);
            }
        }.start();
    }//GEN-LAST:event_jButton2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
